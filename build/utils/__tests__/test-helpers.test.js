'use strict';

var _immutable = require('immutable');

var _constants = require('../../constants');

var _reducer = require('../../reducer');

var _reducer2 = _interopRequireDefault(_reducer);

var _testHelpers = require('../test-helpers');

var _testHelpers2 = _interopRequireDefault(_testHelpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

describe('utils/hoc/onSubmit/utils/test-helpers', function () {
  var mockString = 'this is string';

  it('to be defined', function () {
    expect(_testHelpers2.default).toBeDefined();
    expect(_testHelpers2.default.generate).toBeDefined();
    expect(_testHelpers2.default.generate.propsError).toBeDefined();
    expect(_testHelpers2.default.generate.propsSuccess).toBeDefined();
    expect(_testHelpers2.default.generate.propsNeither).toBeDefined();
    expect(_testHelpers2.default.generate.stateError).toBeDefined();
    expect(_testHelpers2.default.generate.stateSuccess).toBeDefined();
    expect(_testHelpers2.default.generate.stateNeither).toBeDefined();
  });
  it('test.generate.propsError', function () {
    var _expected;

    var expected = (_expected = {}, _defineProperty(_expected, _constants.SERVER_ERROR, mockString), _defineProperty(_expected, _constants.SUBMIT_SUCCESS, false), _expected);
    expect(_testHelpers2.default.generate.propsError(mockString)).toEqual(expected);
  });
  it('test.generate.propsSuccess', function () {
    var _expected2;

    var expected = (_expected2 = {}, _defineProperty(_expected2, _constants.SERVER_ERROR, ''), _defineProperty(_expected2, _constants.SUBMIT_SUCCESS, true), _defineProperty(_expected2, _constants.RESULT, mockString), _expected2);
    expect(_testHelpers2.default.generate.propsSuccess(mockString)).toEqual(expected);
  });
  it('test.generate.propsNeither', function () {
    var _expected3;

    var expected = (_expected3 = {}, _defineProperty(_expected3, _constants.SERVER_ERROR, ''), _defineProperty(_expected3, _constants.SUBMIT_SUCCESS, false), _expected3);
    expect(_testHelpers2.default.generate.propsNeither()).toEqual(expected);
  });
  it('test.generate.stateError', function () {
    var expected = (0, _reducer2.default)((0, _immutable.fromJS)({}), { formName: mockString, type: _constants.SUBMIT_FAILED });
    expect(_testHelpers2.default.generate.stateError(mockString)).toEqual(expected);
  });
  it('test.generate.stateSuccess', function () {
    var expected = (0, _reducer2.default)((0, _immutable.fromJS)({}), { formName: mockString, type: _constants.SUBMIT_SUCCEED });
    expect(_testHelpers2.default.generate.stateSuccess(mockString)).toEqual(expected);
  });
  it('test.generate.stateNeither', function () {
    var expected = (0, _reducer2.default)((0, _immutable.fromJS)({}), { formName: mockString, type: _constants.SUBMIT_SUCCEED });
    expect(_testHelpers2.default.generate.stateNeither(mockString)).not.toEqual(expected);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi91dGlscy9fX3Rlc3RzX18vdGVzdC1oZWxwZXJzLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJtb2NrU3RyaW5nIiwiaXQiLCJleHBlY3QiLCJ0b0JlRGVmaW5lZCIsImdlbmVyYXRlIiwicHJvcHNFcnJvciIsInByb3BzU3VjY2VzcyIsInByb3BzTmVpdGhlciIsInN0YXRlRXJyb3IiLCJzdGF0ZVN1Y2Nlc3MiLCJzdGF0ZU5laXRoZXIiLCJleHBlY3RlZCIsInRvRXF1YWwiLCJmb3JtTmFtZSIsInR5cGUiLCJub3QiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFHQUEsU0FBUyx1Q0FBVCxFQUFrRCxZQUFNO0FBQ3RELE1BQU1DLGFBQWEsZ0JBQW5COztBQUVBQyxLQUFHLGVBQUgsRUFBb0IsWUFBTTtBQUN4QkMsa0NBQWFDLFdBQWI7QUFDQUQsV0FBTyxzQkFBS0UsUUFBWixFQUFzQkQsV0FBdEI7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjQyxVQUFyQixFQUFpQ0YsV0FBakM7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjRSxZQUFyQixFQUFtQ0gsV0FBbkM7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjRyxZQUFyQixFQUFtQ0osV0FBbkM7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjSSxVQUFyQixFQUFpQ0wsV0FBakM7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjSyxZQUFyQixFQUFtQ04sV0FBbkM7QUFDQUQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjTSxZQUFyQixFQUFtQ1AsV0FBbkM7QUFDRCxHQVREO0FBVUFGLEtBQUcsMEJBQUgsRUFBK0IsWUFBTTtBQUFBOztBQUNuQyxRQUFNVSxnRkFBNkJYLFVBQTdCLHlEQUEyRCxLQUEzRCxhQUFOO0FBQ0FFLFdBQU8sc0JBQUtFLFFBQUwsQ0FBY0MsVUFBZCxDQUF5QkwsVUFBekIsQ0FBUCxFQUE2Q1ksT0FBN0MsQ0FBcURELFFBQXJEO0FBQ0QsR0FIRDtBQUlBVixLQUFHLDRCQUFILEVBQWlDLFlBQU07QUFBQTs7QUFDckMsUUFBTVUsa0ZBQTZCLEVBQTdCLDBEQUFtRCxJQUFuRCxrREFBbUVYLFVBQW5FLGNBQU47QUFDQUUsV0FBTyxzQkFBS0UsUUFBTCxDQUFjRSxZQUFkLENBQTJCTixVQUEzQixDQUFQLEVBQStDWSxPQUEvQyxDQUF1REQsUUFBdkQ7QUFDRCxHQUhEO0FBSUFWLEtBQUcsNEJBQUgsRUFBaUMsWUFBTTtBQUFBOztBQUNyQyxRQUFNVSxrRkFBNkIsRUFBN0IsMERBQW1ELEtBQW5ELGNBQU47QUFDQVQsV0FBTyxzQkFBS0UsUUFBTCxDQUFjRyxZQUFkLEVBQVAsRUFBcUNLLE9BQXJDLENBQTZDRCxRQUE3QztBQUNELEdBSEQ7QUFJQVYsS0FBRywwQkFBSCxFQUErQixZQUFNO0FBQ25DLFFBQU1VLFdBQVcsdUJBQVEsdUJBQU8sRUFBUCxDQUFSLEVBQW9CLEVBQUVFLFVBQVViLFVBQVosRUFBd0JjLDhCQUF4QixFQUFwQixDQUFqQjtBQUNBWixXQUFPLHNCQUFLRSxRQUFMLENBQWNJLFVBQWQsQ0FBeUJSLFVBQXpCLENBQVAsRUFBNkNZLE9BQTdDLENBQXFERCxRQUFyRDtBQUNELEdBSEQ7QUFJQVYsS0FBRyw0QkFBSCxFQUFpQyxZQUFNO0FBQ3JDLFFBQU1VLFdBQVcsdUJBQVEsdUJBQU8sRUFBUCxDQUFSLEVBQW9CLEVBQUVFLFVBQVViLFVBQVosRUFBd0JjLCtCQUF4QixFQUFwQixDQUFqQjtBQUNBWixXQUFPLHNCQUFLRSxRQUFMLENBQWNLLFlBQWQsQ0FBMkJULFVBQTNCLENBQVAsRUFBK0NZLE9BQS9DLENBQXVERCxRQUF2RDtBQUNELEdBSEQ7QUFJQVYsS0FBRyw0QkFBSCxFQUFpQyxZQUFNO0FBQ3JDLFFBQU1VLFdBQVcsdUJBQVEsdUJBQU8sRUFBUCxDQUFSLEVBQW9CLEVBQUVFLFVBQVViLFVBQVosRUFBd0JjLCtCQUF4QixFQUFwQixDQUFqQjtBQUNBWixXQUFPLHNCQUFLRSxRQUFMLENBQWNNLFlBQWQsQ0FBMkJWLFVBQTNCLENBQVAsRUFBK0NlLEdBQS9DLENBQW1ESCxPQUFuRCxDQUEyREQsUUFBM0Q7QUFDRCxHQUhEO0FBSUQsQ0FyQ0QiLCJmaWxlIjoidGVzdC1oZWxwZXJzLnRlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tSlMgfSBmcm9tICdpbW11dGFibGUnO1xuaW1wb3J0IHsgUkVTVUxULCBTRVJWRVJfRVJST1IsIFNVQk1JVF9GQUlMRUQsIFNVQk1JVF9TVUNDRUVELCBTVUJNSVRfU1VDQ0VTUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgcmVkdWNlciBmcm9tICcuLi8uLi9yZWR1Y2VyJztcbmltcG9ydCB0ZXN0IGZyb20gJy4uL3Rlc3QtaGVscGVycyc7XG5cblxuZGVzY3JpYmUoJ3V0aWxzL2hvYy9vblN1Ym1pdC91dGlscy90ZXN0LWhlbHBlcnMnLCAoKSA9PiB7XG4gIGNvbnN0IG1vY2tTdHJpbmcgPSAndGhpcyBpcyBzdHJpbmcnO1xuXG4gIGl0KCd0byBiZSBkZWZpbmVkJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0ZXN0KS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlLnByb3BzRXJyb3IpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHRlc3QuZ2VuZXJhdGUucHJvcHNTdWNjZXNzKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlLnByb3BzTmVpdGhlcikudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5zdGF0ZUVycm9yKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlLnN0YXRlU3VjY2VzcykudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5zdGF0ZU5laXRoZXIpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICBpdCgndGVzdC5nZW5lcmF0ZS5wcm9wc0Vycm9yJywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkID0geyBbU0VSVkVSX0VSUk9SXTogbW9ja1N0cmluZywgW1NVQk1JVF9TVUNDRVNTXTogZmFsc2UgfTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5wcm9wc0Vycm9yKG1vY2tTdHJpbmcpKS50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG4gIGl0KCd0ZXN0LmdlbmVyYXRlLnByb3BzU3VjY2VzcycsICgpID0+IHtcbiAgICBjb25zdCBleHBlY3RlZCA9IHsgW1NFUlZFUl9FUlJPUl06ICcnLCBbU1VCTUlUX1NVQ0NFU1NdOiB0cnVlLCBbUkVTVUxUXTogbW9ja1N0cmluZyB9O1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlLnByb3BzU3VjY2Vzcyhtb2NrU3RyaW5nKSkudG9FcXVhbChleHBlY3RlZCk7XG4gIH0pO1xuICBpdCgndGVzdC5nZW5lcmF0ZS5wcm9wc05laXRoZXInLCAoKSA9PiB7XG4gICAgY29uc3QgZXhwZWN0ZWQgPSB7IFtTRVJWRVJfRVJST1JdOiAnJywgW1NVQk1JVF9TVUNDRVNTXTogZmFsc2UgfTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5wcm9wc05laXRoZXIoKSkudG9FcXVhbChleHBlY3RlZCk7XG4gIH0pO1xuICBpdCgndGVzdC5nZW5lcmF0ZS5zdGF0ZUVycm9yJywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkID0gcmVkdWNlcihmcm9tSlMoe30pLCB7IGZvcm1OYW1lOiBtb2NrU3RyaW5nLCB0eXBlOiBTVUJNSVRfRkFJTEVEIH0pO1xuICAgIGV4cGVjdCh0ZXN0LmdlbmVyYXRlLnN0YXRlRXJyb3IobW9ja1N0cmluZykpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcbiAgaXQoJ3Rlc3QuZ2VuZXJhdGUuc3RhdGVTdWNjZXNzJywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkID0gcmVkdWNlcihmcm9tSlMoe30pLCB7IGZvcm1OYW1lOiBtb2NrU3RyaW5nLCB0eXBlOiBTVUJNSVRfU1VDQ0VFRCB9KTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5zdGF0ZVN1Y2Nlc3MobW9ja1N0cmluZykpLnRvRXF1YWwoZXhwZWN0ZWQpO1xuICB9KTtcbiAgaXQoJ3Rlc3QuZ2VuZXJhdGUuc3RhdGVOZWl0aGVyJywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkID0gcmVkdWNlcihmcm9tSlMoe30pLCB7IGZvcm1OYW1lOiBtb2NrU3RyaW5nLCB0eXBlOiBTVUJNSVRfU1VDQ0VFRCB9KTtcbiAgICBleHBlY3QodGVzdC5nZW5lcmF0ZS5zdGF0ZU5laXRoZXIobW9ja1N0cmluZykpLm5vdC50b0VxdWFsKGV4cGVjdGVkKTtcbiAgfSk7XG59KTtcbiJdfQ==