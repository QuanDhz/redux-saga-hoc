'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _constants = require('../constants');

/**
 * action type will be something like `HOC_DO_SUBMIT::containers/Form/Login::loginForm`
 * The part after SEPARATOR is just for debugging purpose, we can ignore and trim that
 * @param type
 */
var trim = function trim(type) {
  return type.indexOf(_constants.SEPARATOR) !== -1 ? type.slice(0, type.indexOf(_constants.SEPARATOR)) : type;
};

/**
 * based from http://redux.js.org/docs/recipes/reducers/ReusingReducerLogic.html
 * @param reducerFunction
 * @param reducerName
 * @param customs
 * @returns {function(*=, *=)}
 */
var wrapReducer = function wrapReducer(reducerFunction, reducerName, customs) {
  return function (state, action) {
    var page = action.page;

    var isInitializationCall = state === undefined;
    if (customs && customs[action.type]) {
      return customs[action.type](state);
    }
    if (page !== reducerName && !isInitializationCall) return state;

    return reducerFunction(state, action);
  };
};

exports.default = {
  trim: trim,
  wrapReducer: wrapReducer
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi91dGlscy9yZWR1Y2VyLWhlbHBlcnMuanMiXSwibmFtZXMiOlsidHJpbSIsInR5cGUiLCJpbmRleE9mIiwic2xpY2UiLCJ3cmFwUmVkdWNlciIsInJlZHVjZXJGdW5jdGlvbiIsInJlZHVjZXJOYW1lIiwiY3VzdG9tcyIsInN0YXRlIiwiYWN0aW9uIiwicGFnZSIsImlzSW5pdGlhbGl6YXRpb25DYWxsIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQTs7Ozs7QUFLQSxJQUFNQSxPQUFPLFNBQVBBLElBQU8sQ0FBQ0MsSUFBRDtBQUFBLFNBQVdBLEtBQUtDLE9BQUwsMkJBQTRCLENBQUMsQ0FBN0IsR0FBaUNELEtBQUtFLEtBQUwsQ0FBVyxDQUFYLEVBQWNGLEtBQUtDLE9BQUwsc0JBQWQsQ0FBakMsR0FBMEVELElBQXJGO0FBQUEsQ0FBYjs7QUFFQTs7Ozs7OztBQU9BLElBQU1HLGNBQWMsU0FBZEEsV0FBYyxDQUFDQyxlQUFELEVBQWtCQyxXQUFsQixFQUErQkMsT0FBL0I7QUFBQSxTQUNsQixVQUFDQyxLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFBQSxRQUNUQyxJQURTLEdBQ0FELE1BREEsQ0FDVEMsSUFEUzs7QUFFakIsUUFBTUMsdUJBQXVCSCxVQUFVSSxTQUF2QztBQUNBLFFBQUlMLFdBQVdBLFFBQVFFLE9BQU9SLElBQWYsQ0FBZixFQUFxQztBQUNuQyxhQUFPTSxRQUFRRSxPQUFPUixJQUFmLEVBQXFCTyxLQUFyQixDQUFQO0FBQ0Q7QUFDRCxRQUFJRSxTQUFTSixXQUFULElBQXdCLENBQUNLLG9CQUE3QixFQUFtRCxPQUFPSCxLQUFQOztBQUVuRCxXQUFPSCxnQkFBZ0JHLEtBQWhCLEVBQXVCQyxNQUF2QixDQUFQO0FBQ0QsR0FWaUI7QUFBQSxDQUFwQjs7a0JBWWU7QUFDYlQsWUFEYTtBQUViSTtBQUZhLEMiLCJmaWxlIjoicmVkdWNlci1oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VQQVJBVE9SIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBhY3Rpb24gdHlwZSB3aWxsIGJlIHNvbWV0aGluZyBsaWtlIGBIT0NfRE9fU1VCTUlUOjpjb250YWluZXJzL0Zvcm0vTG9naW46OmxvZ2luRm9ybWBcbiAqIFRoZSBwYXJ0IGFmdGVyIFNFUEFSQVRPUiBpcyBqdXN0IGZvciBkZWJ1Z2dpbmcgcHVycG9zZSwgd2UgY2FuIGlnbm9yZSBhbmQgdHJpbSB0aGF0XG4gKiBAcGFyYW0gdHlwZVxuICovXG5jb25zdCB0cmltID0gKHR5cGUpID0+ICh0eXBlLmluZGV4T2YoU0VQQVJBVE9SKSAhPT0gLTEgPyB0eXBlLnNsaWNlKDAsIHR5cGUuaW5kZXhPZihTRVBBUkFUT1IpKSA6IHR5cGUpO1xuXG4vKipcbiAqIGJhc2VkIGZyb20gaHR0cDovL3JlZHV4LmpzLm9yZy9kb2NzL3JlY2lwZXMvcmVkdWNlcnMvUmV1c2luZ1JlZHVjZXJMb2dpYy5odG1sXG4gKiBAcGFyYW0gcmVkdWNlckZ1bmN0aW9uXG4gKiBAcGFyYW0gcmVkdWNlck5hbWVcbiAqIEBwYXJhbSBjdXN0b21zXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oKj0sICo9KX1cbiAqL1xuY29uc3Qgd3JhcFJlZHVjZXIgPSAocmVkdWNlckZ1bmN0aW9uLCByZWR1Y2VyTmFtZSwgY3VzdG9tcykgPT5cbiAgKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICBjb25zdCB7IHBhZ2UgfSA9IGFjdGlvbjtcbiAgICBjb25zdCBpc0luaXRpYWxpemF0aW9uQ2FsbCA9IHN0YXRlID09PSB1bmRlZmluZWQ7XG4gICAgaWYgKGN1c3RvbXMgJiYgY3VzdG9tc1thY3Rpb24udHlwZV0pIHtcbiAgICAgIHJldHVybiBjdXN0b21zW2FjdGlvbi50eXBlXShzdGF0ZSk7XG4gICAgfVxuICAgIGlmIChwYWdlICE9PSByZWR1Y2VyTmFtZSAmJiAhaXNJbml0aWFsaXphdGlvbkNhbGwpIHJldHVybiBzdGF0ZTtcblxuICAgIHJldHVybiByZWR1Y2VyRnVuY3Rpb24oc3RhdGUsIGFjdGlvbik7XG4gIH07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdHJpbSxcbiAgd3JhcFJlZHVjZXIsXG59O1xuIl19